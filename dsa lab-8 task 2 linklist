#include <iostream>
using namespace std;

class Queue
{
public:
    int data;
    Queue *next;
    Queue *front;
    Queue *rear;

    Queue() 
	{
        front=NULL;
        rear=NULL;
    }

    void enqueue(int value) 
	{
        Queue *newNode=new Queue;
        newNode->data=value;
        newNode->next=NULL;

        if(front==NULL&&rear==NULL)
		{
            front=rear=newNode;
        }
		else
		{
            rear->next=newNode;
            rear=newNode;
        }
        cout<<"Value inserted!"<<endl;
    }

    void dequeue()
	{
        if(front == NULL)
		{
            cout<<"Queue is empty! Cannot dequeue."<<endl;
        }
		else
		{
            Queue *temp=front;
            front=front->next;
            delete temp;
            cout<<"Value deleted!"<<endl;

            if(front==NULL)
			{
                rear=NULL;
            }
        }
    }

    void display() 
	{
        if(front==NULL)
		{
            cout<<"Queue is empty!"<<endl;
        }
		else
		{
            Queue *temp=front;
            cout<<"Queue elements are:"<<endl;
            while(temp!=NULL)
			{
                cout<<temp->data<<" ";
                temp=temp->next;
            }
            cout<<endl;
        }
    }

    bool isEmpty() 
	{
        return front==NULL;
    }
};

int main() 
{
    Queue q;
    int choice, value;

    while(true) 
	{
        cout<<"\nQueue Operations Menu:\n";
        cout<<"1. Enqueue\n";
        cout<<"2. Dequeue\n";
        cout<<"3. Display\n";
        cout<<"4. Check if Empty\n";
        cout<<"5. Exit\n";
        cout<<"Enter your choice: ";
        cin>>choice;

        switch(choice)
		{
            case 1:
                cout<<"Enter value to enqueue: ";
                cin>>value;
                q.enqueue(value);
                break;
            case 2:
                q.dequeue();
                break;
            case 3:
                q.display();
                break;
            case 4:
                if(q.isEmpty())
				{
                    cout<<"Queue is empty."<<endl;
                } 
				else
				{
                    cout<<"Queue is not empty."<<endl;
                }
                break;
            case 5:
                cout<<"Exiting program."<<endl;
                return 0;
            default:
                cout<<"Invalid choice! Please enter again."<<endl;
        }
    }
}
